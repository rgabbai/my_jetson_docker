# see image def: https://github.com/dusty-nv/jetson-containers/tree/master/packages/jetson-inference
#FROM dustynv/jetson-inference:r36.3.0

# This custom image generated by:
# jetson-containers build --name=jetson-inference jetson-inference jupyterlab rust
# issue - coudn't add realsense,ros using jetson-container 
# adding using this Dockerfile

FROM jetson-inference:r36.3.0


#----------------------------------------------------- General Install section ----------------------------
RUN apt-get update && apt-get install -y  \ 
    nano \  
    vim  \  
    less \
&& rm -rf /var/lib/apt/lists/*


#Sensors - Joystic,...
RUN apt-get update && apt-get install -y  \ 
    joystick \  
    xboxdrv  \  
&& rm -rf /var/lib/apt/lists/*


#----------------------------------------------------- ROS Install ----------------------------------------
# Install necessary dependencies for ROS 2
RUN apt-get update && apt-get install -y \
    curl \
    gnupg2 \
    lsb-release \
    && rm -rf /var/lib/apt/lists/*

# Add ROS 2 apt repository
#RUN curl -sSL http://repo.ros2.org/repos.key | apt-key add - \
#    && sh -c 'echo "deb [arch=$(dpkg --print-architecture)] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" > /etc/apt/sources.list.d/ros2-latest.list'

# Add the ROS 2 GPG key to the keyring
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | \
    gpg --dearmor -o /usr/share/keyrings/ros-archive-keyring.gpg

# Add the ROS 2 apt repository
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | \
    tee /etc/apt/sources.list.d/ros2.list


# Install ROS 2 Humble
RUN apt-get update && apt-get install -y \
    ros-humble-desktop \
    ros-dev-tools \
    python3-argcomplete \
    && rm -rf /var/lib/apt/lists/*

# Source ROS 2 setup script
RUN echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc

#----------------------------------------------------- ROS Install ----------------------------------------
# Install ROS 2 Humble packages
RUN apt-get update && apt-get install -y \
    ros-humble-xacro \
    ros-humble-twist-mux \
    ros-humble-ros2-control \
    ros-humble-ros2-controllers \
    ros-humble-joy \
    ros-humble-rviz2 \
    ros-humble-navigation2 \
    ros-humble-imu-filter-madgwick \
    python3-argcomplete \
    && rm -rf /var/lib/apt/lists/*


#-------------------------------------------------------- YOLO ultralytics ------------------------------------
#RUN pip install ultralytics[export]
RUN pip install git+https://github.com/ultralytics/ultralytics.git@main

#---------------------------------------------------------Additional Python packages -------------------------------------

RUN pip install scikit-learn

#--------------------------------------------------------- Realsense ----------------------------------------------------
# Set the working directory inside the container
WORKDIR /app
COPY libuvc_installation.sh /app/libuvc_installation.sh
RUN chmod +x /app/libuvc_installation.sh
RUN /app/libuvc_installation.sh
RUN pip install pyrealsense2

#-------------------------------------------------------- Entery Point ----------------------------------------
# Define new user
ARG USERNAME=ros
ARG USER_UID=1000
ARG USER_GID=$USER_UID

#create a non root user
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
    && mkdir /home/$USERNAME/.config && chown $USER_UID:$USER_GID /home/$USERNAME/.config

#set up sudo
RUN apt-get update \
    && apt-get install -y sudo \
    && echo $USERNAME ALL =\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME\
    && chmod 0440 /etc/sudoers.d/$USERNAME \
    && rm -rf /var/lib/apt/lists/*


COPY ./entrypoint.sh /entrypoint.sh
# Make the script executable
RUN chmod +x /entrypoint.sh
COPY bashrc /home/${USERNAME}/.bashrc
WORKDIR /
ENTRYPOINT ["/bin/bash", "entrypoint.sh"]
#---------------------------------------------------------------------------------------------------------

# Move to root before starting entry point execution
WORKDIR /

# no external cmd - just open bash terminal
CMD ["bash"]


